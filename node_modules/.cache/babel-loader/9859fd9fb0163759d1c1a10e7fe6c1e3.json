{"ast":null,"code":"import _slicedToArray from \"/Users/guest2/code/newsandbox/reactpractice/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/guest2/code/newsandbox/reactpractice/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { Jumbotron, Table } from \"react-bootstrap\";\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        inputValue = _useState4[0],\n        setInputValue = _useState4[1]; // import React, { useState, useEffect } from \"react\";\n  // import \"bootstrap/dist/css/bootstrap.min.css\";\n  // import \"./App.css\";\n  // import api from \"./utils/api.js\";\n  // import UsersTable from \"./components/UsersTable\";\n  // import FilterInput from \"./components/FilterInput\";\n  // import { Container, Jumbotron } from \"react-bootstrap\";\n  // import { InputGroup, FormControl } from \"react-bootstrap\";\n  // import { Table, Button, Figure } from \"react-bootstrap\";\n  // const App = () => {\n  //   const [users, setUsers] = useState([]);\n  //   const [inputValue, setInputValue] = useState(\"\");\n  //   useEffect(() => {\n  //     const fetchUsers = async () => {\n  //       const data = await api.users();\n  //       setUsers(data);\n  //     };\n  //     fetchUsers();\n  //   }, []);\n  //   const handleSortAscending = () => {\n  //     const sortedUsers = [...users].sort((a, b) => (a.login > b.login ? 1 : -1));\n  //     setUsers(sortedUsers);\n  //   };\n  //   const handleSortDescending = () => {\n  //     const sortedUsers = [...users].sort((a, b) => (a.login > b.login ? -1 : 1));\n  //     setUsers(sortedUsers);\n  //   };\n  //   return (\n  //     <Container>\n  //       <Jumbotron>\n  //         <h1>User Directory</h1>\n  //       </Jumbotron>\n  //       <InputGroup className=\"mb-3\">\n  //       <InputGroup.Prepend>\n  //         <InputGroup.Text id=\"basic-addon1\">Filter results: </InputGroup.Text>\n  //       </InputGroup.Prepend>\n  //       <FormControl\n  //         value={inputValue}\n  //         onChange={event => setInputValue(event.target.value)}\n  //         placeholder=\"username\"\n  //         aria-label=\"username\"\n  //         aria-describedby=\"basic-addon1\"\n  //       />\n  //     </InputGroup>\n  //       <Table striped bordered hover>\n  //       <thead>\n  //         <tr>\n  //           <th>avatar</th>\n  //           <th>\n  //             username{\"  \"}\n  //             <Button onClick={handleSortAscending} variant=\"secondary\" size=\"sm\">\n  //               <i className=\"fa fa-chevron-down\"></i>\n  //             </Button>{\" \"}\n  //             <Button\n  //               onClick={handleSortDescending}\n  //               variant=\"secondary\"\n  //               size=\"sm\"\n  //             >\n  //               <i className=\"fa fa-chevron-up\"></i>\n  //             </Button>\n  //           </th>\n  //           <th>url</th>\n  //         </tr>\n  //       </thead>\n  //       <tbody>\n  //         {users.map(user => (\n  //           <tr key={user.id}>\n  //             <td>\n  //               <Figure.Image\n  //                 width={80}\n  //                 height={80}\n  //                 alt={user.login}\n  //                 src={user.avatar_url}\n  //               />\n  //             </td>\n  //             <td>{user.login}</td>\n  //             <td>\n  //               <a href={user.html_url}>GitHub</a>\n  //             </td>\n  //           </tr>\n  //         ))}\n  //       </tbody>\n  //     </Table>\n  // {/*       \n  //       <UsersTable\n  //         handleSortAscending={handleSortAscending}\n  //         handleSortDescending={handleSortDescending}\n  //         users={users.filter(({ login }) => login.includes(inputValue))}\n  //       /> */}\n  //     </Container>\n  //   );\n  // };\n  // export default App;\n\n\n  useEffect(() => {\n    axios.get(\"https://randomuser.me/api/?results=200&nat=us\").then(response => setUsers(response.data.results));\n  }, []);\n\n  const sortAscending = () => {\n    const sortedUsers = [...users].sort((a, b) => a.name.last.toLowerCase() > b.name.last.toLowerCase() ? 1 : -1);\n    setUsers(sortedUsers);\n  };\n\n  const sortDescending = () => {\n    const sortedUsers = [...users].sort((a, b) => a.name.last.toLowerCase() < b.name.last.toLowerCase() ? 1 : -1);\n    setUsers(sortedUsers);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Jumbotron, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"User Directory\")), React.createElement(\"input\", {\n    type: \"text\",\n    value: inputValue,\n    onChange: event => setInputValue(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: sortAscending,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-chevron-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: sortDescending,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-chevron-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })), users.filter(user => `${user.name.first} ${user.name.last}`.toLowerCase().includes(inputValue.toLowerCase())).map(user => React.createElement(\"div\", {\n    key: user.id.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    class: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Email\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, user.name.first + ' ' + user.name.last), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, user.login.username), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, user.email)))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/guest2/code/newsandbox/reactpractice/src/App.js"],"names":["React","useState","useEffect","axios","Jumbotron","Table","App","users","setUsers","inputValue","setInputValue","get","then","response","data","results","sortAscending","sortedUsers","sort","a","b","name","last","toLowerCase","sortDescending","event","target","value","filter","user","first","includes","map","id","login","username","email"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport \"./App.css\"\nimport {Jumbotron, Table } from \"react-bootstrap\";\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"./App.css\";\n// import api from \"./utils/api.js\";\n// import UsersTable from \"./components/UsersTable\";\n// import FilterInput from \"./components/FilterInput\";\n// import { Container, Jumbotron } from \"react-bootstrap\";\n// import { InputGroup, FormControl } from \"react-bootstrap\";\n// import { Table, Button, Figure } from \"react-bootstrap\";\n\n// const App = () => {\n//   const [users, setUsers] = useState([]);\n//   const [inputValue, setInputValue] = useState(\"\");\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       const data = await api.users();\n\n//       setUsers(data);\n//     };\n\n//     fetchUsers();\n//   }, []);\n\n//   const handleSortAscending = () => {\n//     const sortedUsers = [...users].sort((a, b) => (a.login > b.login ? 1 : -1));\n\n//     setUsers(sortedUsers);\n//   };\n\n//   const handleSortDescending = () => {\n//     const sortedUsers = [...users].sort((a, b) => (a.login > b.login ? -1 : 1));\n\n//     setUsers(sortedUsers);\n//   };\n\n//   return (\n//     <Container>\n//       <Jumbotron>\n//         <h1>User Directory</h1>\n//       </Jumbotron>\n//       <InputGroup className=\"mb-3\">\n//       <InputGroup.Prepend>\n//         <InputGroup.Text id=\"basic-addon1\">Filter results: </InputGroup.Text>\n//       </InputGroup.Prepend>\n//       <FormControl\n//         value={inputValue}\n//         onChange={event => setInputValue(event.target.value)}\n//         placeholder=\"username\"\n//         aria-label=\"username\"\n//         aria-describedby=\"basic-addon1\"\n//       />\n//     </InputGroup>\n\n\n     \n\n\n\n//       <Table striped bordered hover>\n//       <thead>\n//         <tr>\n//           <th>avatar</th>\n//           <th>\n//             username{\"  \"}\n//             <Button onClick={handleSortAscending} variant=\"secondary\" size=\"sm\">\n//               <i className=\"fa fa-chevron-down\"></i>\n//             </Button>{\" \"}\n//             <Button\n//               onClick={handleSortDescending}\n//               variant=\"secondary\"\n//               size=\"sm\"\n//             >\n//               <i className=\"fa fa-chevron-up\"></i>\n//             </Button>\n//           </th>\n//           <th>url</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {users.map(user => (\n//           <tr key={user.id}>\n//             <td>\n//               <Figure.Image\n//                 width={80}\n//                 height={80}\n//                 alt={user.login}\n//                 src={user.avatar_url}\n//               />\n//             </td>\n//             <td>{user.login}</td>\n//             <td>\n//               <a href={user.html_url}>GitHub</a>\n//             </td>\n//           </tr>\n//         ))}\n//       </tbody>\n//     </Table>\n\n\n\n// {/*       \n//       <UsersTable\n//         handleSortAscending={handleSortAscending}\n//         handleSortDescending={handleSortDescending}\n//         users={users.filter(({ login }) => login.includes(inputValue))}\n//       /> */}\n//     </Container>\n//   );\n// };\n\n// export default App;\n\n\n\nuseEffect(() => {\n  axios\n    .get(\"https://randomuser.me/api/?results=200&nat=us\").then(response => setUsers(response.data.results));\n}, []);\n\nconst sortAscending = () => {\n  const sortedUsers = [...users].sort((a, b) => a.name.last.toLowerCase() > b.name.last.toLowerCase() ? 1 : -1);\n  setUsers(sortedUsers)\n};\nconst sortDescending = () => {\n  const sortedUsers = [...users].sort((a, b) => a.name.last.toLowerCase() < b.name.last.toLowerCase() ? 1 : -1);\n  setUsers(sortedUsers);\n};\nreturn (\n  <>\n\n<Jumbotron>\n        <h1>User Directory</h1>\n      </Jumbotron>\n    <input type=\"text\" value={inputValue} onChange={event => setInputValue(event.target.value)} />\n    <button onClick={sortAscending}>\n      <i className=\"fa fa-chevron-up\"></i>\n      </button>\n    <button onClick={sortDescending}><i className=\"fa fa-chevron-down\"></i></button>\n    {users\n      .filter(user =>\n        `${user.name.first} ${user.name.last}`\n          .toLowerCase()\n          .includes(inputValue.toLowerCase()))\n      .map(user => (\n        <div key={user.id.value}>\n\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Username</th>\n              <th scope=\"col\">Email</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{user.name.first + (' ') + user.name.last}</td>\n              <td>{user.login.username}</td>\n              <td>{user.email}</td>\n            </tr>\n          </tbody>\n        </table>\n        </div>\n    ))}\n  </>\n)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}